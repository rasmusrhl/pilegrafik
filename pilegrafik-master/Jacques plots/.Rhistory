library(dplyr)
library(dplyr)
library(tidyverse)
diamonds
diamonds %>% mutate( quartiles_var = ntile( price, 4))
diamonds %>% mutate( quartiles_var = ntile( price, 4)) %>% count(quartiles_var)
diamonds$price[    diamonds$price <= 300 ]
diamonds$price[    diamonds$price <= 300 ]
diamonds$price[    diamonds$price <= 350 ]
Hmisc::cut2( diamonds$price, g = 4) %>% table()
diamonds$price[    diamonds$price <= 1000 ]
diamonds$price[    diamonds$price >= 1000 ]
diamonds$conditional_quartiles_var[    diamonds$price >= 1000 ]  <- 1
diamonds$conditional_quartiles_var <- NA
diamonds$conditional_quartiles_var[    diamonds$price >= 1000 ]  <- 1
diamonds$conditional_quartiles_var <- NA
ntile( diamonds$price, n = 4 )
ntile( diamonds$price[    diamonds$price >= 1000 ], n = 4 )
diamonds$conditional_quartiles_var[    diamonds$price < 1000 ]   <- "Less than 1000"
diamonds %>% count(conditional_quartiles_var)
diamonds$conditional_quartiles_var <- NA
diamonds$conditional_quartiles_var[    diamonds$price >= 1000 ]  <-  ntile( diamonds$price[    diamonds$price >= 1000 ], n = 4 )
diamonds$conditional_quartiles_var[    diamonds$price < 1000 ]   <- "Less than 1000"
diamonds %>% count(conditional_quartiles_var)
diamonds %>% mutate( wrong_conditional_quartiles_var = case_when(  price >= 1000 ~   ntile(price, n = 4),
price <  1000 ~   "Less than 1000")) %>%
count( wrong_conditional_quartiles_var)
diamonds %>% mutate( wrong_conditional_quartiles_var = case_when(  price >= 1000 ~   ntile(price, n = 4) %>% as.character(),
price <  1000 ~   "Less than 1000")) %>%
count( wrong_conditional_quartiles_var)
library(tidyverse)
diamonds$conditional_quartiles_var                           <- NA
diamonds$conditional_quartiles_var[ diamonds$price >= 1000 ] <- ntile( diamonds$price[ diamonds$price >= 1000 ], n = 4 )
diamonds$conditional_quartiles_var[ diamonds$price <  1000 ] <- "Less than 1000"
diamonds %>% count(conditional_quartiles_var)
diamonds %>% mutate( wrong_conditional_quartiles_var = case_when(  price >= 1000 ~   ntile(price, n = 4) %>% as.character(),
price <  1000 ~   "Less than 1000")) %>%
count( wrong_conditional_quartiles_var)
diamonds %>%
mutate( wrong_conditional_quartiles_var = case_when(  price >= 1000 ~   ntile(price, n = 4) %>% as.character(),
price <  1000 ~   "Less than 1000")) %>%
count( wrong_conditional_quartiles_var)
diamonds$conditional_quartiles_var                           <- NA
diamonds$conditional_quartiles_var[ diamonds$price >= 1000 ] <- ntile( diamonds$price[ diamonds$price >= 1000 ], n = 4 )
diamonds$conditional_quartiles_var[ diamonds$price <  1000 ] <- "Less than 1000"
diamonds %>% count(conditional_quartiles_var)
diamonds %>%
mutate(quart = "Less than 1000",
quart = replace(quart, price >= 1000, ntile(price[price>=1000], 4))) %>%
count(quart)
source('C:/Users/rahela/Desktop/pilegrafik-master/pilegrafik-master/main script.R', echo=TRUE)
library(DBI)
con <- dbConnect(odbc::odbc(), "crg_cpr")
DBI::dbListTables(con)
library(DBI)
con <- dbConnect(odbc::odbc(), "crgtest")
DBI::dbListTables(con)
table1 <- DBI::dbListTables(con)
table1
grep( pattern = "sy", x = table1, value = TRUE)
grep( pattern = "pnr", x = table1, value = TRUE)
grep( pattern = "regdb", x = table1, value = TRUE)
library(odbc)
con <- dbConnect(odbc::odbc(), "crg_cpr")
DBI::dbListTables(con)
tables <- DBI::dbListTables(con)
grep( pattern = "regdb", x = tables, value = TRUE)
tables
grep( pattern = "proc", x = tables, value = TRUE)
library(odbc)
con <- dbConnect(odbc::odbc(), "crg_cpr")
library(survival)
mgus
library(tidyverse)
mgus2 <- as_tibble(mgus2)
mgus2
duplicated(mgus2$id )  %>% any()
ptemp <- with(mgus2, mgus2, id = id, death = event( futime, death)), pcm = event(ptemp, pstat))
ptemp <- with(mgus2, mgus2, id = id, death = event( futime, death), pcm = event(ptemp, pstat))
ptemp
mgus2 <- as_tibble(mgus2)
ptemp <- with(mgus2, mgus2, id = id, death = event( futime, death), pcm = event(ptemp, pstat))
ptemp
mgus2 <- as_tibble(mgus2)
ptemp <- with(mgus2, ifelse(ptime==futime & pstat==1, ptime-.1, ptime))
newdata <- tmerge(mgus2, mgus2,  id=id, death=event(futime, death),pcm = event(ptemp, pstat))
with(newdata, table(death, pcm))
duplicated(newdata$id )  %>% any()
newdata
temp <- with(newdata, ifelse(death==1, 2, pcm))
newdata$event <- factor(temp, 0:2, labels=c("censor", "pcm", "death"))
mfit3 <- survfit(Surv(tstart, tstop, event) ~ sex, data=newdata, id=id)
print(mfit3, rmean=240, digits=2)
mfit3$transitions
plot(mfit3[,1], mark.time=FALSE, col=1:2, lty=1:2, lwd=2,xscale=12,xlab="Years post MGUS diagnosis", ylab="Fraction in the PCM state")
